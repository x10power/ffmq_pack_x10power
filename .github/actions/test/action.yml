name: ⏱️Test
description: Test app
inputs:
  os-name:
    required: true
    description: OS to run on
  python-version:
    required: true
    description: Python version to install

#########
# actions
#########
# actions/checkout@v4.1.7
# actions/download-artifact@v4.1.8
# actions/upload-artifact@v4.3.6

runs:
  using: "composite"
  steps:
    # download pipline
    - name: 🔽Download PipLine
      uses: actions/download-artifact@v4.1.8
      with:
        name: pipline-test-${{ inputs.os-name }}-${{ inputs.python-version }}
        path: ./resources/user/meta/manifests
    # start virtual display driver & run tests
    - name: ⏱️Test
      shell: bash
      run: |
        mkdir -p ./failures
        echo "" > ./failures/errors.txt
        python -m resources.tests.images
        python -m resources.tests.items
        python -m resources.tests.functions
        python -m resources.tests.locations
        python -m resources.tests.loctypes
        python -m resources.tests.asserts.validate

    # print failures
    - name: Print Failures
      if: failure()
      shell: bash
      run: |
        ERR_STRING="$(cat ./failures/errors.txt)"
        ERR_STRING="${ERR_STRING//'%'/'%25'}"
        ERR_STRING="${ERR_STRING//$'\n'/' | '}"
        ERR_STRING="${ERR_STRING//$'\r'/' | '}"
        ERR_STRING="${ERR_STRING//$'\n'/'%0A'}"
        ERR_STRING="${ERR_STRING//$'\r'/'%0D'}"
        echo "error=$ERR_STRING" >> $GITHUB_OUTPUT

    # upload output
    - name: 🔼Upload Output
      uses: actions/upload-artifact@v4.3.6
      with:
        name: testoutput-${{ inputs.os-name }}-${{ inputs.python-version }}
        path: ./resources/tests/output

    # upload failures
    - name: 🔼Upload Failures
      if: failure()
      uses: actions/upload-artifact@v4.3.6
      with:
        name: failures-${{ inputs.os-name }}-${{ inputs.python-version }}
        path: ./failures
